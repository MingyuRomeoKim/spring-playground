server:
  port: 8080
  host: http://localhost

app:
  ports:
    auth-api: 18081
    article-api: 18082
    mail-api: 18083

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

logging:
    level:
        root: info
        org.springframework.security: debug
        org.springframework.gateway: debug
jwt:
  access:
    secret: {jwt.access.secret}
    expire: 86400000
  refresh:
    secret: {jwt.refresh.secret}
    expire: 2592000000

spring:
  application:
    name: playground-web-gateway
  profiles:
    include:
      - redis
    active: local
  config:
    import: configserver:http://localhost:8888
  cloud:
    vault:
      token: playground
      uri: http://localhost:8888
    config:
      uri: http://localhost:8888
      profile: default
    gateway:
      # 먼저 선언한 순서대로 필터 적용.
      routes:
        - id: auth-api
          # Eureka 사용할 경우
          uri: lb://auth-api
          # Eureka 사용 안할 경우
          #uri: http://localhost:18085
          # /api/v1/member/** 경로로 들어오는 요청을 member-api로 라우팅
          predicates:
            - Path=/api/v1/auth/login, /api/v1/auth/signup
          filters:
            - AddRequestHeader=first-request, first-request-header2
            - AddResponseHeader=first-response, first-response-header2

        - id : auth-api
          uri: lb://auth-api
          predicates:
            - Path=/api/v1/member/**, /api/v1/auth/logout
          filters:
            - AddRequestHeader=first-request, first-request-header2
            - AddResponseHeader=first-response, first-response-header2
            - AuthorizationHeaderFilter

        - id: article-api
          uri: lb://article-api
          predicates:
            - Path=/api/v1/article/test
          filters:
            - AddRequestHeader=first-request, first-request-header2
            - AddResponseHeader=first-response, first-response-header2

        - id: article-api
          uri: lb://article-api
          predicates:
            - Path=/api/v1/article/**
          filters:
            - AddRequestHeader=first-request, first-request-header2
            - AddResponseHeader=first-response, first-response-header2
            - AuthorizationHeaderFilter

        - id: mail-api
          uri: lb://mail-api
          predicates:
            - Path=/api/v1/mail/**
          filters:
            - AddRequestHeader=first-request, first-request-header2
            - AddResponseHeader=first-response, first-response-header2
            - AuthorizationHeaderFilter
  main:
    web-application-type: reactive

management:
  endpoints:
    web:
      exposure:
        include: gateway
  endpoint:
    gateway:
      enabled: true

springdoc:
  swagger-ui:
    urls[0]:
      name: Auth API
      url: ${server.host}:${app.ports.auth-api}/api/v1/auth/v3/api-docs
    urls[1]:
      name: Article API
      url: ${server.host}:${app.ports.article-api}/api/v1/article/v3/api-docs
    urls[2]:
      name: Mail API
      url: ${server.host}:${app.ports.mail-api}/api/v1/mail/v3/api-docs
    use-root-path: true
    enabled: true
    path: /swagger-ui.html
    config-url: /v3/api-docs/swagger-config