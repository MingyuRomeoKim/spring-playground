plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

bootJar {
	enabled = false
}

repositories {
	mavenCentral()
}

subprojects {
	group = 'com.mingyu.playground'
	version = '0.0.1-SNAPSHOT'

	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(23)
		}
	}

	apply {
		plugin 'java'
		plugin 'java-library'
		plugin 'io.spring.dependency-management'
		plugin 'org.springframework.boot'
	}

	dependencyManagement {
		imports {
			// spring cloud 의존성 관리
			mavenBom("org.springframework.cloud:spring-cloud-dependencies:2023.0.3")
		}
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
	}

	dependencies {

		// Lombok
		runtimeOnly 'com.mysql:mysql-connector-j'
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		// Spring Boot
		implementation 'org.springframework.boot:spring-boot-starter'
		implementation 'org.springframework.boot:spring-boot-starter-security'

		// Swagger
		implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

		// Json
		implementation 'com.google.code.gson:gson:2.11.0'

		// Log
//		implementation 'commons-logging:commons-logging'

		// JWT
		implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.6'
		runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.6'
		runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.6'

		// Validation
		implementation 'org.springframework.boot:spring-boot-starter-validation'
		annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

		// Mapper
		implementation 'org.mapstruct:mapstruct:1.5.5.Final'

		// Test
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.springframework.security:spring-security-test'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
		testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
		testImplementation 'org.assertj:assertj-core'
	}

	test {
		useJUnitPlatform()
	}
}
